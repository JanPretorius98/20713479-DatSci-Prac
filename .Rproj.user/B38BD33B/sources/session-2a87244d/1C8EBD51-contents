---
title: "An Analysis of the evolution of the Covid-19 pandemic"
author: "JH Pretorius"
date: "`r Sys.Date()`"

bibliography: Tex/ref.bib
output:
  pagedown::html_paged:
    # template: wp_paged.html
    # css: ['wp.css', 'wp-fonts.css', 'wp-page.css']
    css: ["Template/default-fonts-Texevier.css", "Template/default-page-Texevier.css", "Template/default-Texevier.css"]
    csl: Template/harvard-stellenbosch-university.csl # referencing format used.
    template: ["Template/paged-Texevier.html"]

    toc: FALSE
    # change to true for a self-contained document, but it'll be a litte slower for Pandoc to render
    self_contained: TRUE

---

```{r setup, include=FALSE}
#   Housekeeping
setwd("/Users/janhendrikpretorius/Library/CloudStorage/OneDrive-StellenboschUniversity/20713479-DatSci-Prac")
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
    #   Clear environment
rm(list = ls())
options(scipen = 999)

    #   Get external code
source("utilities/aesthetics.R") #  Get plot themes
source("utilities/convert_numeric.R")  # Convert multiple columns to numeric 
    #   Load libraries
pacman::p_load(dplyr, ggplot2, tidyverse, stringr, tidytext, ggridges, wordcloud2, ggmap, readxl, maps,
               viridis, lubridate, ggstream, modelsummary, gt, knitr, kableExtra, ggrepel, zoo, 
               rnaturalearth, rnaturalearthdata, sf, lwgeom)

    #   Load Data
path <- "data/Covid/"

file <- "Deaths_by_cause.csv"
df_deaths <- read_csv(paste0(path, file))

file <- "owid-covid-data.csv"
df_covid <- read_csv(paste0(path, file))
```

\newpage
# Exploratory Data Analysis  {-}

##      Africa's Experience     {-}

```{r prepare_data}
df_covid <- convert_to_numeric(df_covid, 5)
#   Aggregate the data
df_covid_continent <- df_covid %>%
    filter(!is.na(continent)) %>%
    group_by(date, continent) %>%
    summarize(
        new_cases_per_million = sum(new_cases_per_million, na.rm = TRUE),
        new_deaths_per_million = sum(new_deaths_per_million, na.rm = TRUE),
        new_deaths = sum(new_deaths, na.rm = TRUE),
        new_cases = sum(new_cases, na.rm = TRUE),
        total_deaths = sum(new_deaths, na.rm = TRUE),
        total_cases = sum(new_cases, na.rm = TRUE),
        new_cases_smoothed = sum(new_cases_smoothed, na.rm = TRUE),
        new_deaths_smoothed = sum(new_deaths_smoothed, na.rm = TRUE),
        .groups = "drop"
    )

#   Convert data from wide to long format
df_covid_long <- df_covid_continent %>%
    pivot_longer(cols = c(new_cases_per_million, new_deaths_per_million, new_cases, new_deaths, new_cases_smoothed, new_deaths_smoothed), names_to = "category", values_to = "count")

# Create custom labels for facets
custom_labels <- as_labeller(c(new_cases_per_million = "New Cases (per million)", new_deaths_per_million = "New Deaths (per million)"))
```

```{r streamgraph, fig.align='center', fig.height=5, fig.width=7}

# Create a faceted streamgraph
df_covid_long %>%
    filter(category == "new_cases_per_million" | category == "new_deaths_per_million") %>% 
    ggplot(aes(x = date, y = count, fill = continent)) +
    geom_stream() +
    scale_fill_manual(values = palette) +
    facet_wrap(~ category, scales = "free", ncol = 1, labeller = custom_labels) +
    th +
    theme(panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),
          axis.text.x.top = element_blank(),
          axis.text.y = element_blank(),
          axis.title.y = element_blank(),
          legend.position = "bottom") +
    labs(title = "Figure 1: COVID-19 cases and deaths over time by continent",
         subtitle = "Top panel represents daily new cases. Bottom panel represents daily new deaths.",
         x = "",
         y = "Count",
         fill = "Continent")


```
From the figure it becomes clear that Europe carried the bulk of covid cases and deaths, with Asia following closely. Interestingly, while South American and African countries have fewer covid cases throughout, it seems that covid-related deaths are relatively higher for these countries, especially as the pandemic progresses. There is also a relatively much larger proportion of COVID-19 related deaths near the start of the pandemic relative to the number of cases. This is likely due to the fact that the vaccine was not available during this time to most of the world population.


```{r}
# Aggregate the data and calculate cumulative cases and deaths
df_covid_cumulative <- df_covid %>%
    filter(!is.na(continent)) %>%
    group_by(continent, date) %>%
    summarise(
        new_cases = sum(new_cases, na.rm = TRUE),
        new_deaths = sum(new_deaths, na.rm = TRUE),
        .groups = "drop"
    ) %>%
    arrange(continent, date) %>%
    group_by(continent) %>%
    mutate(
        total_cases = cumsum(new_cases),
        total_deaths = cumsum(new_deaths),
        death_proportion = total_deaths / total_cases
    )

# Convert from wide to long format for plotting
df_prop <- df_covid_cumulative %>%
    pivot_longer(cols = c(total_cases, total_deaths, death_proportion), names_to = "category", values_to = "count")

# Filter to include only death_proportion
df_prop_deaths <- df_prop %>%
    filter(category == "death_proportion")

# Define the months of interest
months_of_interest <- as.Date(c("2020-06-01", "2020-12-01", "2021-06-01", "2021-12-01", "2022-06-01"))

# Calculate the sum of deaths and cases for each continent and month
df_summaries <- df_covid %>%
  group_by(continent, date = floor_date(date, "month")) %>%
  summarize(total_deaths = sum(new_deaths, na.rm = TRUE), 
            total_cases = sum(new_cases, na.rm = TRUE), 
            .groups = "drop") %>%
  mutate(death_proportion = total_deaths / total_cases) %>%
  filter(date %in% months_of_interest)

# Filter to include only death_proportion and the dates of interest
df_summaries <- df_covid_cumulative %>%
    filter(date %in% months_of_interest) %>%
    select(date, continent, death_proportion)

# Pivot wider to get continents as columns
df_wide <- df_summaries %>%
  pivot_wider(names_from = continent, values_from = death_proportion)

# Convert date to character for display purposes
df_wide <- df_wide %>%
  mutate(date = as.character(date)) %>%
  mutate(across(where(is.numeric), ~ round(.x * 100, 4)))

data <- df_wide[1:5,] %>% tibble::as_tibble()

```

```{r table-1}
gt(data) %>%
  tab_header(
    title = "Table 1: Deaths as a proportion of cases per semester by continent (%)."
  ) 
```
Table 1 and Figure 2 illustrate COVID-19 related deaths by continent. While Africa much less COVID-19 cases than most continents, it still accounted for the second most deaths and consistently displayed high death rates, while other continents could successfully decrease death rates. While Africa never reached the death rates of other continents, it struggled to lessen the impact that COVID-19 had on its population.

```{r lineplots, fig.align='center', fig.height=6, fig.width=8, echo=FALSE, warning=FALSE}

# Create an area plot of the proportion of deaths by continent
ggplot(df_prop_deaths, aes(x = date, y = count, fill = continent)) +
    geom_area(position = 'stack') +
    scale_fill_manual(values = palette) +
    labs(x = "Date", y = "Proportion of Deaths", fill = "Continent") +
    th +
    labs(title = "Figure 2: Proportion of COVID-19 deaths to cases by continent over time")


```
While Africa consistently had fewer total cases and deaths than most regions, this may be the result of severe underreporting of COVID-19 cases and deaths. Figure 3 shows the number of COVID-19 tests available by continent. Despite Africa accounting for a large part of the world population, it had the lowest access rates to COVID-19 tests. This indicates that many individuals who had contracted COVID-19, and even died thereof, were never captured in the data.

The high death rate compared to cases in Africa is also reflected in Africa's vaccine-draught. This is reflected in Figure 4. Africa had significantly less vaccinated individuals than all other continents. This may explain why there is such a large decline in COVID-19 related deaths in Europe, North-America and Asia, as compared to the relatively stable death rate of Africa.
```{r testplot, fig.align='center', fig.height=5, fig.width=6, echo=FALSE, warning=FALSE}

# Compute the total tests per thousand for each continent on each date
df_tests_per_thousand <- df_covid %>%
    filter(!is.na(continent)) %>%
    group_by(continent, date) %>%
    summarize(
        total_tests = sum(total_tests, na.rm = TRUE),
        population = sum(population, na.rm = TRUE),
        .groups = "drop"
    ) %>%
    mutate(total_tests_per_thousand = total_tests / (population / 100)) %>%
    arrange(continent, date) %>%
    group_by(continent) %>%
    mutate(total_tests_30day_avg = rollmean(total_tests_per_thousand, 30, fill = NA, align = "right"))

# Plot the total tests per thousand by continent over time
ggplot(df_tests_per_thousand, aes(x = date, y = total_tests_30day_avg, color = continent)) +
    geom_line(size = 1) +
    scale_color_manual(values=palette) +
    th +
    theme(legend.position = "none") +
    labs(x = "Date", y = "Total tests per thousand*", color = "Continent",
         caption = "*30-day Average.",
         title = "Figure 3: Total tests available over time by continent.")

```

```{r vaxplot, fig.align='center', fig.height=5, fig.width=6, echo=FALSE}
# Create data frame with cumulative vaccinations by date for each continent
df_vaccinations <- df_covid %>%
    filter(!is.na(continent)) %>%
    group_by(continent, date) %>%
    summarize(
        total_vaccinations = sum(people_vaccinated, na.rm = TRUE),
        population = sum(population, na.rm = TRUE),
        .groups = "drop"
    ) %>%
    mutate(total_vaccinations_per_hundred = total_vaccinations / (population / 100)) %>%
    arrange(continent, date) %>%
    group_by(continent) %>%
    mutate(vaccination_30day_avg = rollmean(total_vaccinations_per_hundred, 30, fill = NA, align = "right"))


# Plot 7-day average of vaccinations per hundred over time, colored by continent
df_vaccinations %>%
    filter(date > as.Date("2021-01-01")) %>% 
    ggplot(aes(x = date, y = vaccination_30day_avg, color = continent)) +
    geom_line(size = 1) +
    scale_color_manual(values=palette) +
    th + 
    theme(legend.position = "bottom") +
    labs(x = "Date", y = "People Vaccinated Per Hundred*", color = "Continent",
         caption = "*30-day Average",
         title = "Figure 4: People vaccinated over time by continent.")


```


\newpage
Figure 5 presents a geo-spatial analysis of number of vaccinated individuals and deaths related to COVID-19. The two panels reflect a clear difference in death rates for those countries who successfully increased total vaccinations. 
```{r geospatial_data, echo=FALSE, warning=FALSE, fig.height=6, fig.width=8, fig.align='center'}

# Load the map data
world_map <- ne_countries(scale = "medium", returnclass = "sf") %>%
  filter(admin != "Antarctica")

# Filter COVID-19 data for the specific dates and calculate quarterly averages
df_covid_2021_Q1 <- df_covid %>%
  filter(between(month(date), 1, 3), year(date) == 2021) %>%
  group_by(location) %>%
  summarize(avg_people_vaccinated_per_hundred = mean(people_vaccinated_per_hundred, na.rm = TRUE),
            avg_new_deaths_per_million = mean(new_deaths_per_million, na.rm = TRUE))

df_covid_2021_Q4 <- df_covid %>%
  filter(between(month(date), 10, 12), year(date) == 2021) %>%
  group_by(location) %>%
  summarize(avg_people_vaccinated_per_hundred = mean(people_vaccinated_per_hundred, na.rm = TRUE),
            avg_new_deaths_per_million = mean(new_deaths_per_million, na.rm = TRUE))

# Merge the map data with the COVID-19 data
world_2021_Q1 <- left_join(world_map, df_covid_2021_Q1, by = c("name" = "location"))
world_2021_Q4 <- left_join(world_map, df_covid_2021_Q4, by = c("name" = "location"))

# Define a function to create a choropleth map
create_map <- function(df) {
  # Compute the representative points for each country
  points <- st_point_on_surface(st_geometry(df))
  
  # Add the longitude and latitude of the representative points to the data frame
  df$lon <- st_coordinates(points)[,1]
  df$lat <- st_coordinates(points)[,2]
  
  # Create the plot
  ggplot(data = df) +
    geom_sf(aes(fill = avg_new_deaths_per_million)) +
    geom_point(aes(x = lon, y = lat, size = avg_people_vaccinated_per_hundred), color = "#dd5182", alpha = 0.6) +
    scale_fill_gradientn(colors = c("#003f5c", "#444e86", "#955196", "#dd5182", "#ff6e54", "#ffa600"),
                         na.value = "white",
                         name = "Total Deaths per Million",
                         limits = c(0, 20)) +  # Adjust the limits as per your desired range
    scale_size_continuous(guide = "none", range = c(1, 4), name = "People Vaccinated per Hundred") +
    th +
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank(),
          axis.title.y = element_blank(),
          axis.text.y = element_blank(),
          legend.position = "bottom",
          plot.margin = margin(0, 0, 0, 0))
}

# Create the maps
map_2021Q1 <- create_map(world_2021_Q1)
map_2021Q4 <- create_map(world_2021_Q4)

map_2021Q1 <- map_2021Q1 +
    labs(title = "Figure 5: COVID-19 Outcomes and People Vaccinated per Hundred*",
         subtitle = "Top panel (2021-Q1) and bottom panel (2021-Q4) represent choropleth and bubble plots of COVID-19 related deaths.\nSizes of bubbles relate to number of people vaccinated per 100.") +
    theme(legend.position = "none")

map_2021Q4 <- map_2021Q4 +
    labs(caption = "*Calculated as quarterly average.")

# Print the maps
print(map_2021Q1)
print(map_2021Q4)



```

\newpage
##      Country Characteristics and COVID-19 Severity       {-}
Some country level characteristics also reflect how COVID-19 impacted countries. Figure 6 presents the evolution of COVID-19 related deaths over time for countries in different quartiles of population living in extreme poverty. Unsurprisingly, consistently there are more deaths associated with poorer countries than richer ones as a proportion of total cases. Again, we see poorest countries having the least number of deaths, but this may in fact be due to a dearth of COVID-19 tests. The sizes of the bubbles in the plot also indicate mean hospital beds per thousand individuals for each poverty quartile.

```{r poverty, echo=FALSE, warning=FALSE, fig.height=6, fig.width=8, fig.align='center'}
# Convert the date to month-year format and calculate the extreme poverty quartiles
df_covid_monthly <- df_covid %>%
    filter(!is.na(continent), !is.na(extreme_poverty)) %>% 
    mutate(month_year = floor_date(date, "quarter"),
           poverty_quartile = ntile(extreme_poverty, 4))

# Group and summarize the data by month-year and poverty quartile
df_summary <- df_covid_monthly %>%
  group_by(month_year, poverty_quartile) %>%
  summarise(total_cases = sum(new_cases, na.rm = TRUE), 
            total_deaths = sum(new_deaths, na.rm = TRUE),
            avg_hospital_beds = mean(hospital_beds_per_thousand, na.rm = TRUE),
            death_proportion = total_deaths / total_cases)

# Generate the line plot
ggplot(df_summary, aes(x = month_year, y = death_proportion)) +
  geom_line(aes(color = as.factor(poverty_quartile)), size=1) +
  geom_point(aes(size = avg_hospital_beds, fill = as.factor(poverty_quartile)), shape = 21, color = "NA", alpha = 0.7) +
  scale_color_manual(values=c("#955196", "#dd5182", "#ff6e54", "#ffa600"), name = "Poverty Quartile") +
  scale_fill_manual(values=c("#955196", "#dd5182", "#ff6e54", "#ffa600"), name = "Poverty Quartile") +
  scale_size(range = c(1, 6), guide = FALSE) +
  th +
  theme(legend.position = "bottom")+
  labs(title = "Figure 6: Monthly COVID-19 Death Proportions by Poverty Quartile",
       x = "Month-Year", 
       y = "Deaths (proportion of total cases)",
       subtitle = "Size of bubbles represent average number of hospital beds per thousand. Quartile 4 presents highest\nextreme poverty rate.")


```

Figure 7 shows that countries with older populations indeed had higher infection rates, with many more cases reported in these countries. Figure 8 interestingly shows that countries with a higher prevalence of cardiovascular disease may be associated with lower death rates attirbuted to COVID-19. 
```{r warning=FALSE, message=FALSE}
# Create new variables for quartiles of population over 65 and cardiovascular death rate
df_covid_monthly <- df_covid %>%
  filter(!is.na(aged_65_older), !is.na(cardiovasc_death_rate)) %>%
  mutate(month_year = floor_date(date, "month"),
         aged_quartile = ntile(aged_65_older, 4),
         cardiovasc_quartile = ntile(cardiovasc_death_rate, 4))

# Group and summarize the data by month-year and quartiles
df_summary_age <- df_covid_monthly %>%
  group_by(month_year, aged_quartile) %>%
  summarise(total_cases = sum(new_cases, na.rm = TRUE), 
            total_deaths = sum(new_deaths, na.rm = TRUE))

df_summary_cardio <- df_covid_monthly %>%
  group_by(month_year, cardiovasc_quartile) %>%
  summarise(total_cases = sum(new_cases, na.rm = TRUE), 
            total_deaths = sum(new_deaths, na.rm = TRUE))

# Generate line plots
ggplot(df_summary_age, aes(x = month_year, y = total_cases, color = as.factor(aged_quartile))) +
  geom_line(size=1) +
  scale_color_manual(values=c("#955196", "#dd5182", "#ff6e54", "#ffa600")) +
  th +
  theme(legend.position = "bottom") +
  labs(title = "Figure 7: Monthly COVID-19 Cases by Quartile of\nPopulation Aged 65 and Older",
       x = "Month", 
       y = "Total Cases",
       color = "Quartile of Population Aged 65 and Older")

ggplot(df_summary_cardio, aes(x = month_year, y = total_deaths, color = as.factor(cardiovasc_quartile))) +
  geom_line(size=1) +
  scale_color_manual(values=c("#955196", "#dd5182", "#ff6e54", "#ffa600")) +
  th +
  theme(legend.position = "bottom") +
  labs(title = "Figure 8: Monthly COVID-19 Deaths by Quartile of\nCardiovascular Death Rate",
       x = "Month", 
       y = "Total Deaths",
       color = "Quartile of Cardiovascular Death Rate")



```
However, as the virus also attacks the cardiovascular system as we discovered later, COVID-19 may have been the underlying cause of many cardiovascular deaths.

##      Hospitalisation and Facilities      {-}

```{r error=TRUE}

# Filter for the countries of interest
countries_of_interest <- c("Germany", "United States", "United Kingdom", "Canada", "Australia")
df_covid_filtered <- df_covid %>%
  filter(location %in% countries_of_interest)

# Plot the number of hospital beds per thousand over time by country
ggplot(df_covid_filtered, aes(x = date, y = hospital_beds_per_thousand, color = location)) +
  geom_line(size = 1) +
  scale_color_manual(values=palette) +
  labs(title = "Figure 10A: Hospital Beds per Thousand Over Time by Country",
       x = "Date",
       y = "Hospital Beds per Thousand",
       color = "Country") +
  th +
  theme(legend.position = "none")

```

```{r warning=FALSE}
# Plot the number of ICU patients per million over time by country
ggplot(df_covid_filtered, aes(x = date, y = icu_patients_per_million, color = location)) +
  geom_line(size = 1) +
  scale_color_manual(values=palette) +
  labs(title = "Figure 10B: ICU Patients per Million Over Time by Country",
       x = "Date",
       y = "ICU Patients per Million",
       color = "Country") +
  th +
  theme(legend.position = "bottom")

```
Figure 10 shows the evolution of number of hospital beds available and patients admitted to ICU. Unfortunately, the data on availability of hospital beds is very scarce and only some countries (typically richer) have data on this. Evidently, the data also does not reveal much in terms of how increases in hospitalisation facilities (hospital beds per thousand as a proxy) and ICU admissions are related.
 
