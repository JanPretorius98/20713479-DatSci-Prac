"0","df_coldplay <- df_coldplay %>% "
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","    mutate(artist = ""Coldplay"")"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","df_metallica <- df_metallica %>% "
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","    mutate(artist = ""Metallica"")"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","# Merge datasets"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","df_unfiltered <- bind_rows(df_coldplay, df_metallica)"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","# Function to check and convert duration"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","convert_duration <- function(duration, duration_ms) {"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","  # If 'duration' is NA and 'duration_ms' is not NA"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","  if (is.na(duration) & !is.na(duration_ms)) {"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","    # Convert milliseconds to seconds"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","    duration <- duration_ms / 1000"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","  }"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","  return(duration)"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","}"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","df_unfiltered$duration <- mapply(convert_duration, df_unfiltered$duration, df_unfiltered$duration_ms)"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","filter_words <- c(""Live"", ""Remix"", ""Remastered"", ""Deluxe"", ""Prospekt"", ""Edition"")"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","# Function to check if a song name contains any filter word"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","contains_filter_word <- function(name) {"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","  return(any(str_detect(name, regex(paste(filter_words, collapse = ""|""), ignore_case = TRUE))))"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","}"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","# Apply the function to the 'name' column"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","df <- df_unfiltered[!mapply(contains_filter_word, df_unfiltered$name), ]"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","df <- df_unfiltered[!mapply(contains_filter_word, df_unfiltered$album_name), ]"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","df <- df %>%"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","  mutate(month_year = format(as.Date(release_date), ""%Y-%m""))"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","df$month_year <- as.Date(paste(df$month_year, ""01"", sep = ""-""))"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","calculate_days_since_first_release <- function(df) {"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","  df <- df %>%"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","    arrange(artist, release_date) %>%"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","    group_by(artist) %>%"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","    mutate(first_release_date = min(release_date),"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","           days_since_first_release = as.integer(release_date - first_release_date))"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","  "
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","  return(df)"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","}"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","# Function to check if a song name contains the word ""Live"""
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","is_live_version <- function(name) {"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","  return(str_detect(name, regex(""Live"", ignore_case = TRUE)))"
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
"0","}"
"0",""
"2","Error in exists(cacheKey, where = .rs.WorkingDataEnv, inherits = FALSE) : 
  invalid first argument
"
